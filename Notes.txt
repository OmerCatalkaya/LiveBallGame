

1> github deposu oluşturulur.

2> github'da oluşturulan depo vscode'a indirilir ve ilk commit yapılır.
    > git clone "https://github.com/OmerCatalkaya/LiveBallGame.git" 
    > git add .
    > git commit -m "ilk commit"
    > git push origin master

3> express kurulumu yapılır. ( http://expressjs.com/ )

    > npm install express --save
    > npm install express-generator -g
    > express --view=pug myapp 
        yada
        > express --view=pug myapp
    > npm install
    > npm install nodemon
    > package.json'da yapılacak değişiklikler
        "scripts": {
            "start": "nodemon ./bin/www"
        },
    > git add .
    > git commit -m "ilk commit"
    > git push origin master

4> Arayüz /views/index.pug/ dosyası içine oluşturulur. https://html2jade.org/ 

5> Bower front-end bağımlılık yönetim aracıdır. ( https://www.youtube.com/watch?v=UhxGUaTm9RA )

    > npm install -g bower // bower paketi kurulur
    > bower init // bower için "bower.json" dosyası kurulur

6> bower aracılığı ile angular kurulumu yapılır.
    > bower install angular --save

7> bower dosyalarına erişim için "bower_components" app.js içinden klasörüne erişim izni verilir.

    app.use(express.static(path.join(__dirname, 'public')));
    app.use(express.static(path.join(__dirname, 'bower_components')));

8> layout.pug içinde angular'ın js dosyaları erişmek için bir block oluşturulur.

  block javascript
    script(src="/angular/angular.min.js")

9> bower aracılığı ile semantic ui kurulumu yapılır ve layout.pug da semantic.min.css link ayarı yapılır.
    > bower install semantic --save
    
    link(rel='stylesheet', href=/semantic/dist/semantic.min.css')
    link(rel='stylesheet', href='/stylesheets/style.css')

10> angular ayarları yapılır.
    > public/javascripts/main.js dosyası oluşturulur
        const app = angular.module("app",[]);

    > public/javascripts/indexController.js dosyası oluşturulur
        app.controller("indexController", ["$scope", $scope => {
            
        }]);

    >  layout.pug > body(ng-app="app")
    >  index.pug > div(ng-controller="indexController")

    > layout.pug dosyası için main.js ve indexController.js eklenir.
        script(src="/angular/angular.min.js")
        script(src="/javascripts/main.js")
        script(src="/javascripts/indexController.js")

11> socket.io peketi projeye dahil edilir.
    > npm install socket.io --save

12> src adında bir klasör oluşturulur ve socketApi.js dosyası oluşturulur.

    const socketio = require("socket.io");
    const io = socketio();
    const socketApi = {};

    socketApi.io = io;

    io.on("connection", (socket) => {
        console.log("a user connected...");
    });

    module.exports =socketApi;

13> bin/www dosyasına gerekli code lar yazılarak socket.io server da aktif olarak çalışması sağlanır.
    /**
    * socketio
    */

    const socketApi = require("../src/socketApi.js");
    const io = socketApi.io;
    io.attach(server);

14> layout.pug dosyasına socket.io.js dosyası eklenir.
    block javascript
      script(src="/socket.io/socket.io.js")

15> AngularJS indexFactory servisi yazılır.

16> 